import OpenAI from "openai";
import { NextRequest, NextResponse } from "next/server";

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

export async function POST(req: NextRequest) {
  console.log('üî• NEW ROUTE VERSION 2.0 üî•');
  
  try {
    const body = await req.json();
    console.log('Body received:', body);
    
    const userMessage = body.message;
    if (!userMessage || userMessage.trim() === '') {
      console.log('‚ùå Empty message detected');
      return NextResponse.json({ error: "No message provided." }, { status: 400 });
    }
    
    console.log('‚úÖ Calling OpenAI with message:', userMessage);
    
    // Call OpenAI Chat Completion
    const chat = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        { role: "system", content: "You are a helpful assistant." },
        { role: "user", content: userMessage },
      ],
    });
    
    const reply = chat.choices[0]?.message?.content || "No reply from OpenAI.";
    console.log('‚úÖ OpenAI replied:', reply.substring(0, 50) + '...');
    return NextResponse.json({ reply });
    
  } catch (err: any) {
    console.error('‚ùå ERROR:', err.message);
    return NextResponse.json({ error: err.message || "Internal server error." }, { status: 500 });
  }
}
